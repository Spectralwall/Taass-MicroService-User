#spring.datasource.url=jdbc:postgresql://localhost:5432/giovanna
#spring.datasource.username=giovanna
#spring.datasource.password=gio
spring.datasource.url= jdbc:postgresql://db:5432/user
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.username=admin
spring.datasource.password=admin

#RabbitMQ
#spring.rabbitmq.host=rabbitmq:management://rabbitmq:5672
#spring.rabbitmq.port=5672
#spring.rabbitmq.username=guest
#spring.rabbitmq.password=guest

#second db ...
#spring.secondDatasource.url = jdbc:postgresql://db:5432/session
#spring.secondDatasource.username = admin
#spring.secondDatasource.password = admin
#spring.secondDatasource.driverClassName = org.postgresql.Driver
# The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# Disable feature detection by this undocumented parameter. Check the org.hibernate.engine.jdbc.internal.JdbcServiceImpl.configure method for more details.
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false

# Because detection is disabled you have to set correct dialect by hand.
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL9Dialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update

#spring.session.store-type=jdbc
#spring.session.jdbc.initialize-schema=always
#spring.session.timeout.seconds=9999
#spring.h2.console.enabled=true
